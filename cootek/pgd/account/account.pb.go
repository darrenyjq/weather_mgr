// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account.proto

package account

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AccountType int32

const (
	AccountType_TEMP             AccountType = 0
	AccountType_PHONE            AccountType = 1
	AccountType_OAUTH2_GOOGLE    AccountType = 2
	AccountType_OAUTH_TWITTER    AccountType = 3
	AccountType_OAUTH2_FACEBOOK  AccountType = 4
	AccountType_OAUTH2_SINAWEIBO AccountType = 5
	AccountType_OAUTH2_QQ        AccountType = 6
	AccountType_VOIP_TEMP        AccountType = 7
	AccountType_MAIL             AccountType = 8
	AccountType_OAUTH2_XIAOMI    AccountType = 9
	AccountType_ANDES            AccountType = 10
	AccountType_OEM_AUTH         AccountType = 11
	AccountType_MARKET           AccountType = 12
	AccountType_ALERT            AccountType = 13
	AccountType_PHONE_OEM_OPEN   AccountType = 14
	AccountType_PHONE_GOOGLE     AccountType = 15
	AccountType_PHONE_FACEBOOK   AccountType = 16
	AccountType_PHONE_TWITTER    AccountType = 17
	AccountType_PALLAS           AccountType = 18
	AccountType_PHONE_WEIXIN     AccountType = 19
)

var AccountType_name = map[int32]string{
	0:  "TEMP",
	1:  "PHONE",
	2:  "OAUTH2_GOOGLE",
	3:  "OAUTH_TWITTER",
	4:  "OAUTH2_FACEBOOK",
	5:  "OAUTH2_SINAWEIBO",
	6:  "OAUTH2_QQ",
	7:  "VOIP_TEMP",
	8:  "MAIL",
	9:  "OAUTH2_XIAOMI",
	10: "ANDES",
	11: "OEM_AUTH",
	12: "MARKET",
	13: "ALERT",
	14: "PHONE_OEM_OPEN",
	15: "PHONE_GOOGLE",
	16: "PHONE_FACEBOOK",
	17: "PHONE_TWITTER",
	18: "PALLAS",
	19: "PHONE_WEIXIN",
}

var AccountType_value = map[string]int32{
	"TEMP":             0,
	"PHONE":            1,
	"OAUTH2_GOOGLE":    2,
	"OAUTH_TWITTER":    3,
	"OAUTH2_FACEBOOK":  4,
	"OAUTH2_SINAWEIBO": 5,
	"OAUTH2_QQ":        6,
	"VOIP_TEMP":        7,
	"MAIL":             8,
	"OAUTH2_XIAOMI":    9,
	"ANDES":            10,
	"OEM_AUTH":         11,
	"MARKET":           12,
	"ALERT":            13,
	"PHONE_OEM_OPEN":   14,
	"PHONE_GOOGLE":     15,
	"PHONE_FACEBOOK":   16,
	"PHONE_TWITTER":    17,
	"PALLAS":           18,
	"PHONE_WEIXIN":     19,
}

func (x AccountType) Enum() *AccountType {
	p := new(AccountType)
	*p = x
	return p
}

func (x AccountType) String() string {
	return proto.EnumName(AccountType_name, int32(x))
}

func (x *AccountType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AccountType_value, data, "AccountType")
	if err != nil {
		return err
	}
	*x = AccountType(value)
	return nil
}

func (AccountType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{0}
}

type MediaSource int32

const (
	MediaSource_MEDIA_SOURCE_DEFAULT              MediaSource = 0
	MediaSource_MEDIA_SOURCE_FACEBOOK             MediaSource = 1
	MediaSource_MEDIA_SOURCE_ADWORDS              MediaSource = 2
	MediaSource_MEDIA_SOURCE_WANGMENG             MediaSource = 3
	MediaSource_MEDIA_SOURCE_GOOGLE_PLAY          MediaSource = 4
	MediaSource_MEDIA_SOURCE_DAILIANG             MediaSource = 5
	MediaSource_MEDIA_SOURCE_OTHERS               MediaSource = 6
	MediaSource_MEDIA_SOURCE_OEM                  MediaSource = 7
	MediaSource_MEDIA_SOURCE_POSSIBLE_GOOGLE_PLAY MediaSource = 8
	MediaSource_MEDIA_SOURCE_NOAH_PUSH            MediaSource = 9
)

var MediaSource_name = map[int32]string{
	0: "MEDIA_SOURCE_DEFAULT",
	1: "MEDIA_SOURCE_FACEBOOK",
	2: "MEDIA_SOURCE_ADWORDS",
	3: "MEDIA_SOURCE_WANGMENG",
	4: "MEDIA_SOURCE_GOOGLE_PLAY",
	5: "MEDIA_SOURCE_DAILIANG",
	6: "MEDIA_SOURCE_OTHERS",
	7: "MEDIA_SOURCE_OEM",
	8: "MEDIA_SOURCE_POSSIBLE_GOOGLE_PLAY",
	9: "MEDIA_SOURCE_NOAH_PUSH",
}

var MediaSource_value = map[string]int32{
	"MEDIA_SOURCE_DEFAULT":              0,
	"MEDIA_SOURCE_FACEBOOK":             1,
	"MEDIA_SOURCE_ADWORDS":              2,
	"MEDIA_SOURCE_WANGMENG":             3,
	"MEDIA_SOURCE_GOOGLE_PLAY":          4,
	"MEDIA_SOURCE_DAILIANG":             5,
	"MEDIA_SOURCE_OTHERS":               6,
	"MEDIA_SOURCE_OEM":                  7,
	"MEDIA_SOURCE_POSSIBLE_GOOGLE_PLAY": 8,
	"MEDIA_SOURCE_NOAH_PUSH":            9,
}

func (x MediaSource) Enum() *MediaSource {
	p := new(MediaSource)
	*p = x
	return p
}

func (x MediaSource) String() string {
	return proto.EnumName(MediaSource_name, int32(x))
}

func (x *MediaSource) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MediaSource_value, data, "MediaSource")
	if err != nil {
		return err
	}
	*x = MediaSource(value)
	return nil
}

func (MediaSource) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{1}
}

type ActivationInfo_ActivateType int32

const (
	ActivationInfo_NEW       ActivationInfo_ActivateType = 0
	ActivationInfo_RENEW     ActivationInfo_ActivateType = 1
	ActivationInfo_UPGRADE   ActivationInfo_ActivateType = 2
	ActivationInfo_RECOMMEND ActivationInfo_ActivateType = 3
	ActivationInfo_EFFECTIVE ActivationInfo_ActivateType = 4
)

var ActivationInfo_ActivateType_name = map[int32]string{
	0: "NEW",
	1: "RENEW",
	2: "UPGRADE",
	3: "RECOMMEND",
	4: "EFFECTIVE",
}

var ActivationInfo_ActivateType_value = map[string]int32{
	"NEW":       0,
	"RENEW":     1,
	"UPGRADE":   2,
	"RECOMMEND": 3,
	"EFFECTIVE": 4,
}

func (x ActivationInfo_ActivateType) Enum() *ActivationInfo_ActivateType {
	p := new(ActivationInfo_ActivateType)
	*p = x
	return p
}

func (x ActivationInfo_ActivateType) String() string {
	return proto.EnumName(ActivationInfo_ActivateType_name, int32(x))
}

func (x *ActivationInfo_ActivateType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActivationInfo_ActivateType_value, data, "ActivationInfo_ActivateType")
	if err != nil {
		return err
	}
	*x = ActivationInfo_ActivateType(value)
	return nil
}

func (ActivationInfo_ActivateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{0, 0}
}

type ActivationInfo struct {
	ActivateType         *ActivationInfo_ActivateType `protobuf:"varint,1,req,name=activate_type,json=activateType,enum=cootek.pgd.account.ActivationInfo_ActivateType" json:"activate_type,omitempty"`
	UserId               *uint64                      `protobuf:"varint,2,req,name=user_id,json=userId" json:"user_id,omitempty"`
	AppName              *string                      `protobuf:"bytes,3,req,name=app_name,json=appName" json:"app_name,omitempty"`
	AppVersion           *string                      `protobuf:"bytes,4,req,name=app_version,json=appVersion" json:"app_version,omitempty"`
	OsName               *string                      `protobuf:"bytes,5,opt,name=os_name,json=osName" json:"os_name,omitempty"`
	OsVersion            *string                      `protobuf:"bytes,6,opt,name=os_version,json=osVersion" json:"os_version,omitempty"`
	DeviceInfo           *string                      `protobuf:"bytes,7,opt,name=device_info,json=deviceInfo" json:"device_info,omitempty"`
	ChannelCode          *string                      `protobuf:"bytes,8,opt,name=channel_code,json=channelCode" json:"channel_code,omitempty"`
	Imei                 *string                      `protobuf:"bytes,9,opt,name=imei" json:"imei,omitempty"`
	Uuid                 *string                      `protobuf:"bytes,10,opt,name=uuid" json:"uuid,omitempty"`
	Simid                *string                      `protobuf:"bytes,11,opt,name=simid" json:"simid,omitempty"`
	Locale               *string                      `protobuf:"bytes,12,opt,name=locale" json:"locale,omitempty"`
	Mnc                  *string                      `protobuf:"bytes,13,opt,name=mnc" json:"mnc,omitempty"`
	Manufacturer         *string                      `protobuf:"bytes,14,opt,name=manufacturer" json:"manufacturer,omitempty"`
	ApiLevel             *string                      `protobuf:"bytes,15,opt,name=api_level,json=apiLevel" json:"api_level,omitempty"`
	HostAppName          *string                      `protobuf:"bytes,16,opt,name=host_app_name,json=hostAppName" json:"host_app_name,omitempty"`
	HostAppVersion       *string                      `protobuf:"bytes,17,opt,name=host_app_version,json=hostAppVersion" json:"host_app_version,omitempty"`
	Resolution           *string                      `protobuf:"bytes,18,opt,name=resolution" json:"resolution,omitempty"`
	Dpi                  *string                      `protobuf:"bytes,19,opt,name=dpi" json:"dpi,omitempty"`
	PysicalSize          *string                      `protobuf:"bytes,20,opt,name=pysical_size,json=pysicalSize" json:"pysical_size,omitempty"`
	RecommendChannel     *string                      `protobuf:"bytes,21,opt,name=recommend_channel,json=recommendChannel" json:"recommend_channel,omitempty"`
	LastActivationCode   *string                      `protobuf:"bytes,23,opt,name=last_activation_code,json=lastActivationCode" json:"last_activation_code,omitempty"`
	Identifier           *string                      `protobuf:"bytes,24,opt,name=identifier" json:"identifier,omitempty"`
	SysApp               *bool                        `protobuf:"varint,25,opt,name=sys_app,json=sysApp" json:"sys_app,omitempty"`
	Timestamp            *uint64                      `protobuf:"varint,26,opt,name=timestamp" json:"timestamp,omitempty"`
	Idfa                 *string                      `protobuf:"bytes,27,opt,name=idfa" json:"idfa,omitempty"`
	Idfv                 *string                      `protobuf:"bytes,28,opt,name=idfv" json:"idfv,omitempty"`
	AppleToken           *string                      `protobuf:"bytes,29,opt,name=apple_token,json=appleToken" json:"apple_token,omitempty"`
	Release              *string                      `protobuf:"bytes,30,opt,name=release" json:"release,omitempty"`
	AndroidId            *string                      `protobuf:"bytes,31,opt,name=android_id,json=androidId" json:"android_id,omitempty"`
	MacAddress           *string                      `protobuf:"bytes,32,opt,name=mac_address,json=macAddress" json:"mac_address,omitempty"`
	DeviceVerified       *string                      `protobuf:"bytes,33,opt,name=device_verified,json=deviceVerified" json:"device_verified,omitempty"`
	PackageName          *string                      `protobuf:"bytes,34,opt,name=package_name,json=packageName" json:"package_name,omitempty"`
	MetaData             *string                      `protobuf:"bytes,35,opt,name=meta_data,json=metaData" json:"meta_data,omitempty"`
	UpgradeTimestamp     *uint64                      `protobuf:"varint,36,opt,name=upgrade_timestamp,json=upgradeTimestamp" json:"upgrade_timestamp,omitempty"`
	ActivateTimestamp    *uint64                      `protobuf:"varint,37,opt,name=activate_timestamp,json=activateTimestamp" json:"activate_timestamp,omitempty"`
	Gaid                 *string                      `protobuf:"bytes,38,opt,name=gaid" json:"gaid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ActivationInfo) Reset()         { *m = ActivationInfo{} }
func (m *ActivationInfo) String() string { return proto.CompactTextString(m) }
func (*ActivationInfo) ProtoMessage()    {}
func (*ActivationInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{0}
}

func (m *ActivationInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivationInfo.Unmarshal(m, b)
}
func (m *ActivationInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivationInfo.Marshal(b, m, deterministic)
}
func (m *ActivationInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivationInfo.Merge(m, src)
}
func (m *ActivationInfo) XXX_Size() int {
	return xxx_messageInfo_ActivationInfo.Size(m)
}
func (m *ActivationInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivationInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ActivationInfo proto.InternalMessageInfo

func (m *ActivationInfo) GetActivateType() ActivationInfo_ActivateType {
	if m != nil && m.ActivateType != nil {
		return *m.ActivateType
	}
	return ActivationInfo_NEW
}

func (m *ActivationInfo) GetUserId() uint64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ActivationInfo) GetAppName() string {
	if m != nil && m.AppName != nil {
		return *m.AppName
	}
	return ""
}

func (m *ActivationInfo) GetAppVersion() string {
	if m != nil && m.AppVersion != nil {
		return *m.AppVersion
	}
	return ""
}

func (m *ActivationInfo) GetOsName() string {
	if m != nil && m.OsName != nil {
		return *m.OsName
	}
	return ""
}

func (m *ActivationInfo) GetOsVersion() string {
	if m != nil && m.OsVersion != nil {
		return *m.OsVersion
	}
	return ""
}

func (m *ActivationInfo) GetDeviceInfo() string {
	if m != nil && m.DeviceInfo != nil {
		return *m.DeviceInfo
	}
	return ""
}

func (m *ActivationInfo) GetChannelCode() string {
	if m != nil && m.ChannelCode != nil {
		return *m.ChannelCode
	}
	return ""
}

func (m *ActivationInfo) GetImei() string {
	if m != nil && m.Imei != nil {
		return *m.Imei
	}
	return ""
}

func (m *ActivationInfo) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *ActivationInfo) GetSimid() string {
	if m != nil && m.Simid != nil {
		return *m.Simid
	}
	return ""
}

func (m *ActivationInfo) GetLocale() string {
	if m != nil && m.Locale != nil {
		return *m.Locale
	}
	return ""
}

func (m *ActivationInfo) GetMnc() string {
	if m != nil && m.Mnc != nil {
		return *m.Mnc
	}
	return ""
}

func (m *ActivationInfo) GetManufacturer() string {
	if m != nil && m.Manufacturer != nil {
		return *m.Manufacturer
	}
	return ""
}

func (m *ActivationInfo) GetApiLevel() string {
	if m != nil && m.ApiLevel != nil {
		return *m.ApiLevel
	}
	return ""
}

func (m *ActivationInfo) GetHostAppName() string {
	if m != nil && m.HostAppName != nil {
		return *m.HostAppName
	}
	return ""
}

func (m *ActivationInfo) GetHostAppVersion() string {
	if m != nil && m.HostAppVersion != nil {
		return *m.HostAppVersion
	}
	return ""
}

func (m *ActivationInfo) GetResolution() string {
	if m != nil && m.Resolution != nil {
		return *m.Resolution
	}
	return ""
}

func (m *ActivationInfo) GetDpi() string {
	if m != nil && m.Dpi != nil {
		return *m.Dpi
	}
	return ""
}

func (m *ActivationInfo) GetPysicalSize() string {
	if m != nil && m.PysicalSize != nil {
		return *m.PysicalSize
	}
	return ""
}

func (m *ActivationInfo) GetRecommendChannel() string {
	if m != nil && m.RecommendChannel != nil {
		return *m.RecommendChannel
	}
	return ""
}

func (m *ActivationInfo) GetLastActivationCode() string {
	if m != nil && m.LastActivationCode != nil {
		return *m.LastActivationCode
	}
	return ""
}

func (m *ActivationInfo) GetIdentifier() string {
	if m != nil && m.Identifier != nil {
		return *m.Identifier
	}
	return ""
}

func (m *ActivationInfo) GetSysApp() bool {
	if m != nil && m.SysApp != nil {
		return *m.SysApp
	}
	return false
}

func (m *ActivationInfo) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *ActivationInfo) GetIdfa() string {
	if m != nil && m.Idfa != nil {
		return *m.Idfa
	}
	return ""
}

func (m *ActivationInfo) GetIdfv() string {
	if m != nil && m.Idfv != nil {
		return *m.Idfv
	}
	return ""
}

func (m *ActivationInfo) GetAppleToken() string {
	if m != nil && m.AppleToken != nil {
		return *m.AppleToken
	}
	return ""
}

func (m *ActivationInfo) GetRelease() string {
	if m != nil && m.Release != nil {
		return *m.Release
	}
	return ""
}

func (m *ActivationInfo) GetAndroidId() string {
	if m != nil && m.AndroidId != nil {
		return *m.AndroidId
	}
	return ""
}

func (m *ActivationInfo) GetMacAddress() string {
	if m != nil && m.MacAddress != nil {
		return *m.MacAddress
	}
	return ""
}

func (m *ActivationInfo) GetDeviceVerified() string {
	if m != nil && m.DeviceVerified != nil {
		return *m.DeviceVerified
	}
	return ""
}

func (m *ActivationInfo) GetPackageName() string {
	if m != nil && m.PackageName != nil {
		return *m.PackageName
	}
	return ""
}

func (m *ActivationInfo) GetMetaData() string {
	if m != nil && m.MetaData != nil {
		return *m.MetaData
	}
	return ""
}

func (m *ActivationInfo) GetUpgradeTimestamp() uint64 {
	if m != nil && m.UpgradeTimestamp != nil {
		return *m.UpgradeTimestamp
	}
	return 0
}

func (m *ActivationInfo) GetActivateTimestamp() uint64 {
	if m != nil && m.ActivateTimestamp != nil {
		return *m.ActivateTimestamp
	}
	return 0
}

func (m *ActivationInfo) GetGaid() string {
	if m != nil && m.Gaid != nil {
		return *m.Gaid
	}
	return ""
}

type Account struct {
	UserId               *uint64         `protobuf:"varint,1,req,name=user_id,json=userId" json:"user_id,omitempty"`
	AccountType          *AccountType    `protobuf:"varint,2,req,name=account_type,json=accountType,enum=cootek.pgd.account.AccountType" json:"account_type,omitempty"`
	Token                *string         `protobuf:"bytes,3,req,name=token" json:"token,omitempty"`
	ExpDate              *uint64         `protobuf:"varint,4,req,name=exp_date,json=expDate" json:"exp_date,omitempty"`
	ActivationCode       *string         `protobuf:"bytes,5,opt,name=activation_code,json=activationCode" json:"activation_code,omitempty"`
	ActivationInfo       *ActivationInfo `protobuf:"bytes,6,opt,name=activation_info,json=activationInfo" json:"activation_info,omitempty"`
	AccountName          *string         `protobuf:"bytes,7,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	AuthInfo_3P          *string         `protobuf:"bytes,8,opt,name=auth_info_3p,json=authInfo3p" json:"auth_info_3p,omitempty"`
	Auth_3PName          *string         `protobuf:"bytes,9,opt,name=auth_3p_name,json=auth3pName" json:"auth_3p_name,omitempty"`
	Forbidden            *bool           `protobuf:"varint,10,opt,name=forbidden" json:"forbidden,omitempty"`
	AccountRegion        *string         `protobuf:"bytes,11,opt,name=account_region,json=accountRegion" json:"account_region,omitempty"`
	MediaSource          *MediaSource    `protobuf:"varint,12,opt,name=media_source,json=mediaSource,enum=cootek.pgd.account.MediaSource" json:"media_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{1}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetUserId() uint64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Account) GetAccountType() AccountType {
	if m != nil && m.AccountType != nil {
		return *m.AccountType
	}
	return AccountType_TEMP
}

func (m *Account) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *Account) GetExpDate() uint64 {
	if m != nil && m.ExpDate != nil {
		return *m.ExpDate
	}
	return 0
}

func (m *Account) GetActivationCode() string {
	if m != nil && m.ActivationCode != nil {
		return *m.ActivationCode
	}
	return ""
}

func (m *Account) GetActivationInfo() *ActivationInfo {
	if m != nil {
		return m.ActivationInfo
	}
	return nil
}

func (m *Account) GetAccountName() string {
	if m != nil && m.AccountName != nil {
		return *m.AccountName
	}
	return ""
}

func (m *Account) GetAuthInfo_3P() string {
	if m != nil && m.AuthInfo_3P != nil {
		return *m.AuthInfo_3P
	}
	return ""
}

func (m *Account) GetAuth_3PName() string {
	if m != nil && m.Auth_3PName != nil {
		return *m.Auth_3PName
	}
	return ""
}

func (m *Account) GetForbidden() bool {
	if m != nil && m.Forbidden != nil {
		return *m.Forbidden
	}
	return false
}

func (m *Account) GetAccountRegion() string {
	if m != nil && m.AccountRegion != nil {
		return *m.AccountRegion
	}
	return ""
}

func (m *Account) GetMediaSource() MediaSource {
	if m != nil && m.MediaSource != nil {
		return *m.MediaSource
	}
	return MediaSource_MEDIA_SOURCE_DEFAULT
}

func init() {
	proto.RegisterEnum("cootek.pgd.account.AccountType", AccountType_name, AccountType_value)
	proto.RegisterEnum("cootek.pgd.account.MediaSource", MediaSource_name, MediaSource_value)
	proto.RegisterEnum("cootek.pgd.account.ActivationInfo_ActivateType", ActivationInfo_ActivateType_name, ActivationInfo_ActivateType_value)
	proto.RegisterType((*ActivationInfo)(nil), "cootek.pgd.account.ActivationInfo")
	proto.RegisterType((*Account)(nil), "cootek.pgd.account.Account")
}

func init() { proto.RegisterFile("account.proto", fileDescriptor_8e28828dcb8d24f0) }

var fileDescriptor_8e28828dcb8d24f0 = []byte{
	// 1260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0xeb, 0x72, 0xdb, 0x36,
	0x13, 0x8d, 0x2e, 0xd6, 0x65, 0x25, 0xcb, 0x30, 0xec, 0x24, 0x48, 0xe2, 0xc4, 0x8a, 0xbe, 0x2f,
	0xad, 0x26, 0x9d, 0xda, 0x9d, 0xf8, 0x09, 0x68, 0x8b, 0xb6, 0x39, 0x91, 0x44, 0x85, 0xa2, 0xed,
	0xb4, 0x7f, 0x38, 0x28, 0x01, 0x29, 0x18, 0x8b, 0x97, 0x21, 0x29, 0x4d, 0x9c, 0xdf, 0x7d, 0x92,
	0xbe, 0x4d, 0x1f, 0xaa, 0x33, 0x1d, 0x00, 0xd4, 0xad, 0x6e, 0xa7, 0xbf, 0xcc, 0x3d, 0x7b, 0x16,
	0xc0, 0xee, 0x1e, 0x1f, 0xc1, 0x2e, 0xf5, 0xfd, 0x68, 0x1e, 0x66, 0x27, 0x71, 0x12, 0x65, 0x11,
	0xc6, 0x7e, 0x14, 0x65, 0xfc, 0xfe, 0x24, 0x9e, 0xb2, 0x93, 0x3c, 0xd3, 0xf9, 0x0d, 0xa0, 0x65,
	0xf8, 0x99, 0x58, 0xd0, 0x4c, 0x44, 0xa1, 0x15, 0x4e, 0x22, 0xec, 0xca, 0x3a, 0x85, 0x70, 0x2f,
	0x7b, 0x88, 0x39, 0x29, 0xb4, 0x8b, 0xdd, 0xd6, 0x87, 0xd3, 0x93, 0xc7, 0xe5, 0x27, 0xdb, 0xa5,
	0xcb, 0x90, 0xbb, 0x0f, 0x31, 0x77, 0x9a, 0x74, 0x23, 0xc2, 0xcf, 0xa1, 0x3a, 0x4f, 0x79, 0xe2,
	0x09, 0x46, 0x8a, 0xed, 0x62, 0xb7, 0xec, 0x54, 0x64, 0x68, 0x31, 0xfc, 0x02, 0x6a, 0x34, 0x8e,
	0xbd, 0x90, 0x06, 0x9c, 0x94, 0xda, 0xc5, 0x6e, 0xdd, 0xa9, 0xd2, 0x38, 0x1e, 0xd2, 0x80, 0xe3,
	0x63, 0x68, 0xc8, 0xd4, 0x82, 0x27, 0xa9, 0x88, 0x42, 0x52, 0x56, 0x59, 0xa0, 0x71, 0x7c, 0xab,
	0x11, 0x79, 0x68, 0x94, 0xea, 0xd2, 0x9d, 0x76, 0xa1, 0x5b, 0x77, 0x2a, 0x51, 0xaa, 0x2a, 0x5f,
	0x03, 0x44, 0xe9, 0xaa, 0xb0, 0xa2, 0x72, 0xf5, 0x28, 0x5d, 0xd6, 0x1d, 0x43, 0x83, 0xf1, 0x85,
	0xf0, 0xb9, 0x27, 0xc2, 0x49, 0x44, 0xaa, 0x2a, 0x0f, 0x1a, 0x52, 0x33, 0x78, 0x0b, 0x4d, 0xff,
	0x0b, 0x0d, 0x43, 0x3e, 0xf3, 0xfc, 0x88, 0x71, 0x52, 0x53, 0x8c, 0x46, 0x8e, 0x5d, 0x44, 0x8c,
	0x63, 0x0c, 0x65, 0x11, 0x70, 0x41, 0xea, 0x2a, 0xa5, 0xbe, 0x25, 0x36, 0x9f, 0x0b, 0x46, 0x40,
	0x63, 0xf2, 0x1b, 0x1f, 0xc2, 0x4e, 0x2a, 0x02, 0xc1, 0x48, 0x43, 0x81, 0x3a, 0xc0, 0xcf, 0xa0,
	0x32, 0x8b, 0x7c, 0x3a, 0xe3, 0xa4, 0xa9, 0x1f, 0xae, 0x23, 0x8c, 0xa0, 0x14, 0x84, 0x3e, 0xd9,
	0x55, 0xa0, 0xfc, 0xc4, 0x1d, 0x68, 0x06, 0x34, 0x9c, 0x4f, 0xa8, 0x9f, 0xcd, 0x13, 0x9e, 0x90,
	0x96, 0x4a, 0x6d, 0x61, 0xf8, 0x15, 0xd4, 0x69, 0x2c, 0xbc, 0x19, 0x5f, 0xf0, 0x19, 0xd9, 0x53,
	0x84, 0x1a, 0x8d, 0x45, 0x5f, 0xc6, 0xb8, 0x03, 0xbb, 0x5f, 0xa2, 0x34, 0xf3, 0x56, 0x53, 0x46,
	0xba, 0x19, 0x09, 0x1a, 0xf9, 0xa4, 0xbb, 0x80, 0x56, 0x9c, 0xe5, 0xd4, 0xf6, 0x15, 0xad, 0x95,
	0xd3, 0x96, 0xa3, 0x7b, 0x03, 0x90, 0xf0, 0x34, 0x9a, 0xcd, 0xe5, 0xd2, 0x09, 0xd6, 0x93, 0x5b,
	0x23, 0xb2, 0x01, 0x16, 0x0b, 0x72, 0xa0, 0x1b, 0x60, 0xb1, 0x90, 0xb3, 0x8c, 0x1f, 0x52, 0xe1,
	0xd3, 0x99, 0x97, 0x8a, 0x6f, 0x9c, 0x1c, 0xea, 0xeb, 0x73, 0x6c, 0x2c, 0xbe, 0x71, 0xfc, 0x03,
	0xec, 0x27, 0xdc, 0x8f, 0x82, 0x80, 0x87, 0xcc, 0xcb, 0x87, 0x4c, 0x9e, 0x2a, 0x1e, 0x5a, 0x25,
	0x2e, 0x34, 0x8e, 0x7f, 0x82, 0xc3, 0x19, 0x95, 0x6f, 0x5d, 0x69, 0x4f, 0xef, 0xe8, 0xb9, 0xe2,
	0x63, 0x99, 0x5b, 0xcb, 0x52, 0xad, 0xea, 0x0d, 0x80, 0x60, 0x3c, 0xcc, 0xc4, 0x44, 0xf0, 0x84,
	0x10, 0xfd, 0xe6, 0x35, 0x22, 0x65, 0x94, 0x3e, 0xa4, 0xb2, 0x79, 0xf2, 0xa2, 0x5d, 0xe8, 0xd6,
	0x9c, 0x4a, 0xfa, 0x90, 0x1a, 0x71, 0x8c, 0x8f, 0xa0, 0x9e, 0x89, 0x80, 0xa7, 0x19, 0x0d, 0x62,
	0xf2, 0xb2, 0x5d, 0xe8, 0x96, 0x9d, 0x35, 0xa0, 0x14, 0xc0, 0x26, 0x94, 0xbc, 0xca, 0x15, 0xc0,
	0x26, 0x34, 0xc7, 0x16, 0xe4, 0x68, 0x85, 0x2d, 0x72, 0x19, 0xcf, 0xb8, 0x97, 0x45, 0xf7, 0x3c,
	0x24, 0xaf, 0xf5, 0xfd, 0x0a, 0x72, 0x25, 0x82, 0x09, 0x54, 0x13, 0x3e, 0xe3, 0x34, 0xe5, 0xe4,
	0x8d, 0x4a, 0x2e, 0x43, 0xa9, 0x63, 0x1a, 0xb2, 0x24, 0x12, 0x4c, 0xfe, 0xe3, 0x1c, 0x6b, 0x1d,
	0xe7, 0x88, 0xc5, 0xe4, 0xc9, 0x01, 0xf5, 0x3d, 0xca, 0x58, 0xc2, 0xd3, 0x94, 0xb4, 0xf5, 0xc9,
	0x01, 0xf5, 0x0d, 0x8d, 0xe0, 0xef, 0x61, 0x2f, 0x17, 0xfa, 0x82, 0x27, 0xb2, 0x59, 0x46, 0xde,
	0xea, 0xb5, 0x6a, 0xf8, 0x36, 0x47, 0xd5, 0x92, 0xa8, 0x7f, 0x4f, 0xa7, 0x5c, 0x6b, 0xa4, 0x93,
	0x2f, 0x49, 0x63, 0x4a, 0x23, 0xaf, 0xa0, 0x1e, 0xf0, 0x8c, 0x7a, 0x8c, 0x66, 0x94, 0xfc, 0x4f,
	0x8b, 0x4c, 0x02, 0x3d, 0x9a, 0x51, 0xb9, 0xc1, 0x79, 0x3c, 0x4d, 0x28, 0xe3, 0xde, 0x7a, 0x62,
	0xff, 0x57, 0x13, 0x43, 0x79, 0xc2, 0x5d, 0x0d, 0xee, 0x47, 0xc0, 0x6b, 0x87, 0x59, 0xb1, 0xdf,
	0x29, 0xf6, 0xfe, 0xca, 0x35, 0x36, 0xe7, 0x3c, 0xa5, 0x82, 0x91, 0xef, 0xf4, 0x4c, 0xe5, 0x77,
	0x67, 0x00, 0xcd, 0x4d, 0xb3, 0xc1, 0x55, 0x28, 0x0d, 0xcd, 0x3b, 0xf4, 0x04, 0xd7, 0x61, 0xc7,
	0x31, 0xe5, 0x67, 0x01, 0x37, 0xa0, 0x7a, 0x33, 0xba, 0x72, 0x8c, 0x9e, 0x89, 0x8a, 0x78, 0x17,
	0xea, 0x8e, 0x79, 0x61, 0x0f, 0x06, 0xe6, 0xb0, 0x87, 0x4a, 0x32, 0x34, 0x2f, 0x2f, 0xcd, 0x0b,
	0xd7, 0xba, 0x35, 0x51, 0xb9, 0xf3, 0x67, 0x09, 0xaa, 0x86, 0xf6, 0xb4, 0x4d, 0xa7, 0x2a, 0x6c,
	0x39, 0xd5, 0x39, 0x34, 0x73, 0xdf, 0xd3, 0xbe, 0x58, 0x54, 0xbe, 0x78, 0xfc, 0xcf, 0xbe, 0xa8,
	0xfe, 0x2a, 0x1f, 0x6c, 0xd0, 0x75, 0x20, 0xdd, 0x40, 0xab, 0x40, 0x5b, 0x9d, 0x0e, 0xa4, 0x07,
	0xf2, 0xaf, 0xb1, 0x9c, 0x2c, 0x57, 0x2e, 0x57, 0x76, 0xaa, 0xfc, 0x6b, 0xdc, 0xa3, 0x19, 0x97,
	0x1b, 0xfc, 0xbb, 0xd0, 0xb5, 0xd5, 0xb5, 0xe8, 0xb6, 0xc8, 0x3f, 0x6e, 0x11, 0x95, 0xaf, 0x49,
	0xdf, 0x6b, 0x7c, 0xe8, 0xfc, 0xb7, 0x71, 0x6f, 0x1e, 0xb6, 0xf4, 0xbf, 0x65, 0xab, 0x4a, 0x0e,
	0xda, 0x21, 0x97, 0x9d, 0x28, 0x39, 0xb4, 0xa1, 0x49, 0xe7, 0xd9, 0x17, 0x75, 0x93, 0x77, 0x16,
	0xe7, 0x16, 0x09, 0x12, 0x93, 0x47, 0x9c, 0xc5, 0x2b, 0xc6, 0x59, 0xee, 0x3b, 0xf5, 0x35, 0xe3,
	0x4c, 0xdb, 0xce, 0x11, 0xd4, 0x27, 0x51, 0xf2, 0xab, 0x60, 0x8c, 0x87, 0xca, 0x34, 0x6b, 0xce,
	0x1a, 0xc0, 0xef, 0xa0, 0xb5, 0x7c, 0x44, 0xc2, 0xa7, 0xd2, 0x6e, 0xb4, 0x85, 0x2e, 0x7f, 0xd6,
	0x1c, 0x05, 0xca, 0xb5, 0x04, 0x9c, 0x09, 0xea, 0xa5, 0xd1, 0x3c, 0xf1, 0xb5, 0xa1, 0xfe, 0xcb,
	0x5a, 0x06, 0x92, 0x37, 0x56, 0x34, 0xa7, 0x11, 0xac, 0x83, 0xf7, 0x7f, 0x14, 0xa1, 0xb1, 0xb1,
	0x33, 0x5c, 0x83, 0xb2, 0x6b, 0x0e, 0x46, 0x5a, 0x4f, 0xa3, 0x6b, 0x7b, 0x68, 0xa2, 0x02, 0xde,
	0x87, 0x5d, 0xdb, 0xb8, 0x71, 0xaf, 0x3f, 0x78, 0x57, 0xb6, 0x7d, 0xd5, 0x97, 0xaa, 0x5a, 0x42,
	0x9e, 0x7b, 0x67, 0xb9, 0xae, 0xe9, 0xa0, 0x12, 0x3e, 0x80, 0xbd, 0x9c, 0x75, 0x69, 0x5c, 0x98,
	0xe7, 0xb6, 0xfd, 0x11, 0x95, 0xf1, 0x21, 0xa0, 0x1c, 0x1c, 0x5b, 0x43, 0xe3, 0xce, 0xb4, 0xce,
	0x6d, 0xb4, 0x23, 0x45, 0x98, 0xa3, 0x9f, 0x3e, 0xa1, 0x8a, 0x0c, 0x6f, 0x6d, 0x6b, 0xe4, 0xa9,
	0x9b, 0xab, 0xf2, 0x0d, 0x03, 0xc3, 0xea, 0xa3, 0xda, 0xc6, 0xc5, 0x9f, 0x2d, 0xc3, 0x1e, 0x58,
	0xa8, 0x2e, 0x9f, 0x65, 0x0c, 0x7b, 0xe6, 0x18, 0x01, 0x6e, 0x42, 0xcd, 0x36, 0x07, 0x9e, 0x24,
	0xa0, 0x06, 0x06, 0xa8, 0x0c, 0x0c, 0xe7, 0xa3, 0xe9, 0xa2, 0xa6, 0x22, 0xf5, 0x4d, 0xc7, 0x45,
	0xbb, 0x18, 0x43, 0x4b, 0xb5, 0xe1, 0x49, 0xaa, 0x3d, 0x32, 0x87, 0xa8, 0x85, 0x11, 0x34, 0x35,
	0x96, 0xb7, 0xb3, 0xb7, 0x66, 0xad, 0x9e, 0x8e, 0xe4, 0xe5, 0x1a, 0x5b, 0xb6, 0xb8, 0x2f, 0xef,
	0x18, 0x19, 0xfd, 0xbe, 0x31, 0x46, 0x78, 0x7d, 0xc8, 0x9d, 0x69, 0x7d, 0xb6, 0x86, 0xe8, 0xe0,
	0xfd, 0xef, 0x45, 0x68, 0x6c, 0x0c, 0x1a, 0x13, 0x38, 0x1c, 0x98, 0x3d, 0xcb, 0xf0, 0xc6, 0xf6,
	0x8d, 0x73, 0x61, 0x7a, 0x3d, 0xf3, 0xd2, 0xb8, 0xe9, 0xbb, 0xe8, 0x09, 0x7e, 0x01, 0x4f, 0xb7,
	0x32, 0xab, 0x5b, 0x0b, 0x8f, 0x8a, 0x8c, 0xde, 0x9d, 0xed, 0xf4, 0xc6, 0xa8, 0xf8, 0xa8, 0xe8,
	0xce, 0x18, 0x5e, 0x0d, 0xcc, 0xe1, 0x15, 0x2a, 0xe1, 0x23, 0x20, 0x5b, 0x29, 0xdd, 0x97, 0x37,
	0xea, 0x1b, 0x3f, 0xa3, 0xf2, 0xa3, 0xc2, 0x9e, 0x61, 0xf5, 0x2d, 0x63, 0x78, 0x85, 0x76, 0xf0,
	0x73, 0x38, 0xd8, 0x4a, 0xd9, 0xee, 0xb5, 0xe9, 0x8c, 0x51, 0x45, 0xee, 0x6d, 0x3b, 0x61, 0x0e,
	0x50, 0x15, 0xbf, 0x83, 0xb7, 0x5b, 0xe8, 0xc8, 0x1e, 0x8f, 0xad, 0xf3, 0xfe, 0xf6, 0x85, 0x35,
	0xfc, 0x12, 0x9e, 0x6d, 0xd1, 0x86, 0xb6, 0x71, 0xed, 0x8d, 0x6e, 0xc6, 0xd7, 0xa8, 0x7e, 0x4e,
	0x7e, 0x79, 0x16, 0x88, 0xe9, 0xa9, 0xd6, 0xe8, 0x69, 0x3c, 0x65, 0xa7, 0xb9, 0x46, 0xff, 0x0a,
	0x00, 0x00, 0xff, 0xff, 0x6c, 0x50, 0x98, 0xb3, 0xb5, 0x09, 0x00, 0x00,
}
