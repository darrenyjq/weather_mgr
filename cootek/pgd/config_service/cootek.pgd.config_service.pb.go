// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: cootek.pgd.config_service.proto

package config_service

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	account "weather_mgr/cootek/pgd/account"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Abtest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Val  int64  `protobuf:"varint,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *Abtest) Reset() {
	*x = Abtest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cootek_pgd_config_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Abtest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Abtest) ProtoMessage() {}

func (x *Abtest) ProtoReflect() protoreflect.Message {
	mi := &file_cootek_pgd_config_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Abtest.ProtoReflect.Descriptor instead.
func (*Abtest) Descriptor() ([]byte, []int) {
	return file_cootek_pgd_config_service_proto_rawDescGZIP(), []int{0}
}

func (x *Abtest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Abtest) GetVal() int64 {
	if x != nil {
		return x.Val
	}
	return 0
}

type GetConfigParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string           `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Group   int64            `protobuf:"varint,2,opt,name=group,proto3" json:"group,omitempty"`
	AppName string           `protobuf:"bytes,3,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Abtests []*Abtest        `protobuf:"bytes,4,rep,name=abtests,proto3" json:"abtests,omitempty"`
	Account *account.Account `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`
	Cache   bool             `protobuf:"varint,6,opt,name=cache,proto3" json:"cache,omitempty"`
}

func (x *GetConfigParam) Reset() {
	*x = GetConfigParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cootek_pgd_config_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigParam) ProtoMessage() {}

func (x *GetConfigParam) ProtoReflect() protoreflect.Message {
	mi := &file_cootek_pgd_config_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigParam.ProtoReflect.Descriptor instead.
func (*GetConfigParam) Descriptor() ([]byte, []int) {
	return file_cootek_pgd_config_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetConfigParam) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetConfigParam) GetGroup() int64 {
	if x != nil {
		return x.Group
	}
	return 0
}

func (x *GetConfigParam) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *GetConfigParam) GetAbtests() []*Abtest {
	if x != nil {
		return x.Abtests
	}
	return nil
}

func (x *GetConfigParam) GetAccount() *account.Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *GetConfigParam) GetCache() bool {
	if x != nil {
		return x.Cache
	}
	return false
}

type ConfigResultExtraInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Group int64    `protobuf:"varint,2,opt,name=group,proto3" json:"group,omitempty"`
	Steps []string `protobuf:"bytes,3,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *ConfigResultExtraInfo) Reset() {
	*x = ConfigResultExtraInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cootek_pgd_config_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResultExtraInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResultExtraInfo) ProtoMessage() {}

func (x *ConfigResultExtraInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cootek_pgd_config_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResultExtraInfo.ProtoReflect.Descriptor instead.
func (*ConfigResultExtraInfo) Descriptor() ([]byte, []int) {
	return file_cootek_pgd_config_service_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigResultExtraInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConfigResultExtraInfo) GetGroup() int64 {
	if x != nil {
		return x.Group
	}
	return 0
}

func (x *ConfigResultExtraInfo) GetSteps() []string {
	if x != nil {
		return x.Steps
	}
	return nil
}

type GetConfigResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config    string                 `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	ExtraInfo *ConfigResultExtraInfo `protobuf:"bytes,2,opt,name=extra_info,json=extraInfo,proto3" json:"extra_info,omitempty"`
}

func (x *GetConfigResult) Reset() {
	*x = GetConfigResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cootek_pgd_config_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResult) ProtoMessage() {}

func (x *GetConfigResult) ProtoReflect() protoreflect.Message {
	mi := &file_cootek_pgd_config_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResult.ProtoReflect.Descriptor instead.
func (*GetConfigResult) Descriptor() ([]byte, []int) {
	return file_cootek_pgd_config_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetConfigResult) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *GetConfigResult) GetExtraInfo() *ConfigResultExtraInfo {
	if x != nil {
		return x.ExtraInfo
	}
	return nil
}

var File_cootek_pgd_config_service_proto protoreflect.FileDescriptor

var file_cootek_pgd_config_service_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x63, 0x6f, 0x6f, 0x74, 0x65, 0x6b, 0x2e, 0x70, 0x67, 0x64, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x19, 0x63, 0x6f, 0x6f, 0x74, 0x65, 0x6b, 0x2e, 0x70, 0x67, 0x64, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x06, 0x41,
	0x62, 0x74, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0xdd, 0x01, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x62, 0x74, 0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6f, 0x74, 0x65, 0x6b, 0x2e, 0x70, 0x67, 0x64, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41,
	0x62, 0x74, 0x65, 0x73, 0x74, 0x52, 0x07, 0x61, 0x62, 0x74, 0x65, 0x73, 0x74, 0x73, 0x12, 0x35,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x63, 0x6f, 0x6f, 0x74, 0x65, 0x6b, 0x2e, 0x70, 0x67, 0x64, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x22, 0x55, 0x0a, 0x15, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x65,
	0x70, 0x73, 0x22, 0x7a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4f, 0x0a,
	0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6f, 0x74, 0x65, 0x6b, 0x2e, 0x70, 0x67, 0x64, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x6f,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x5e, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6f, 0x74, 0x65, 0x6b, 0x2e,
	0x70, 0x67, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x1a, 0x2a, 0x2e, 0x63, 0x6f, 0x6f, 0x74, 0x65, 0x6b, 0x2e, 0x70, 0x67, 0x64, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42,
	0x27, 0x5a, 0x25, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x6d, 0x67, 0x72, 0x2f, 0x63,
	0x6f, 0x6f, 0x74, 0x65, 0x6b, 0x2f, 0x70, 0x67, 0x64, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cootek_pgd_config_service_proto_rawDescOnce sync.Once
	file_cootek_pgd_config_service_proto_rawDescData = file_cootek_pgd_config_service_proto_rawDesc
)

func file_cootek_pgd_config_service_proto_rawDescGZIP() []byte {
	file_cootek_pgd_config_service_proto_rawDescOnce.Do(func() {
		file_cootek_pgd_config_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_cootek_pgd_config_service_proto_rawDescData)
	})
	return file_cootek_pgd_config_service_proto_rawDescData
}

var file_cootek_pgd_config_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_cootek_pgd_config_service_proto_goTypes = []interface{}{
	(*Abtest)(nil),                // 0: cootek.pgd.config_service.Abtest
	(*GetConfigParam)(nil),        // 1: cootek.pgd.config_service.GetConfigParam
	(*ConfigResultExtraInfo)(nil), // 2: cootek.pgd.config_service.ConfigResultExtraInfo
	(*GetConfigResult)(nil),       // 3: cootek.pgd.config_service.GetConfigResult
	(*account.Account)(nil),       // 4: cootek.pgd.account.Account
}
var file_cootek_pgd_config_service_proto_depIdxs = []int32{
	0, // 0: cootek.pgd.config_service.GetConfigParam.abtests:type_name -> cootek.pgd.config_service.Abtest
	4, // 1: cootek.pgd.config_service.GetConfigParam.account:type_name -> cootek.pgd.account.Account
	2, // 2: cootek.pgd.config_service.GetConfigResult.extra_info:type_name -> cootek.pgd.config_service.ConfigResultExtraInfo
	1, // 3: cootek.pgd.config_service.ConfigService.Get:input_type -> cootek.pgd.config_service.GetConfigParam
	3, // 4: cootek.pgd.config_service.ConfigService.Get:output_type -> cootek.pgd.config_service.GetConfigResult
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_cootek_pgd_config_service_proto_init() }
func file_cootek_pgd_config_service_proto_init() {
	if File_cootek_pgd_config_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cootek_pgd_config_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Abtest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cootek_pgd_config_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cootek_pgd_config_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResultExtraInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cootek_pgd_config_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cootek_pgd_config_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cootek_pgd_config_service_proto_goTypes,
		DependencyIndexes: file_cootek_pgd_config_service_proto_depIdxs,
		MessageInfos:      file_cootek_pgd_config_service_proto_msgTypes,
	}.Build()
	File_cootek_pgd_config_service_proto = out.File
	file_cootek_pgd_config_service_proto_rawDesc = nil
	file_cootek_pgd_config_service_proto_goTypes = nil
	file_cootek_pgd_config_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ConfigServiceClient is the client API for ConfigService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigServiceClient interface {
	Get(ctx context.Context, in *GetConfigParam, opts ...grpc.CallOption) (*GetConfigResult, error)
}

type configServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewConfigServiceClient(cc grpc.ClientConnInterface) ConfigServiceClient {
	return &configServiceClient{cc}
}

func (c *configServiceClient) Get(ctx context.Context, in *GetConfigParam, opts ...grpc.CallOption) (*GetConfigResult, error) {
	out := new(GetConfigResult)
	err := c.cc.Invoke(ctx, "/cootek.pgd.config_service.ConfigService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigServiceServer is the server API for ConfigService service.
type ConfigServiceServer interface {
	Get(context.Context, *GetConfigParam) (*GetConfigResult, error)
}

// UnimplementedConfigServiceServer can be embedded to have forward compatible implementations.
type UnimplementedConfigServiceServer struct {
}

func (*UnimplementedConfigServiceServer) Get(context.Context, *GetConfigParam) (*GetConfigResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterConfigServiceServer(s *grpc.Server, srv ConfigServiceServer) {
	s.RegisterService(&_ConfigService_serviceDesc, srv)
}

func _ConfigService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cootek.pgd.config_service.ConfigService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).Get(ctx, req.(*GetConfigParam))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConfigService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cootek.pgd.config_service.ConfigService",
	HandlerType: (*ConfigServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _ConfigService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cootek.pgd.config_service.proto",
}
