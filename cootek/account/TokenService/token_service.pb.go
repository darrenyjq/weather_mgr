// Code generated by protoc-gen-go. DO NOT EDIT.
// source: token_service.proto

package TokenService

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "gitlab.corp.cootek.com/cloud_infra/elete-go/pkg/elete/sdk"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TokenStatus int32

const (
	TokenStatus_TOKEN_VALID   TokenStatus = 0
	TokenStatus_TOKEN_INVALID TokenStatus = 2
)

var TokenStatus_name = map[int32]string{
	0: "TOKEN_VALID",
	2: "TOKEN_INVALID",
}

var TokenStatus_value = map[string]int32{
	"TOKEN_VALID":   0,
	"TOKEN_INVALID": 2,
}

func (x TokenStatus) String() string {
	return proto.EnumName(TokenStatus_name, int32(x))
}

func (TokenStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{0}
}

type AccountType int32

const (
	AccountType_TEMP             AccountType = 0
	AccountType_PHONE            AccountType = 1
	AccountType_OAUTH2_GOOGLE    AccountType = 2
	AccountType_OAUTH_TWITTER    AccountType = 3
	AccountType_OAUTH2_FACEBOOK  AccountType = 4
	AccountType_OAUTH2_SINAWEIBO AccountType = 5
	AccountType_OAUTH2_QQ        AccountType = 6
	AccountType_VOIP_TEMP        AccountType = 7
	AccountType_MAIL             AccountType = 8
	AccountType_OAUTH2_XIAOMI    AccountType = 9
	AccountType_ANDES            AccountType = 10
	AccountType_OEM_AUTH         AccountType = 11
	AccountType_MARKET           AccountType = 12
	AccountType_ALERT            AccountType = 13
	AccountType_PHONE_OEM_OPEN   AccountType = 14
	AccountType_PHONE_GOOGLE     AccountType = 15
	AccountType_PHONE_FACEBOOK   AccountType = 16
	AccountType_PHONE_TWITTER    AccountType = 17
	AccountType_PALLAS           AccountType = 18
	AccountType_PHONE_WEIXIN     AccountType = 19
)

var AccountType_name = map[int32]string{
	0:  "TEMP",
	1:  "PHONE",
	2:  "OAUTH2_GOOGLE",
	3:  "OAUTH_TWITTER",
	4:  "OAUTH2_FACEBOOK",
	5:  "OAUTH2_SINAWEIBO",
	6:  "OAUTH2_QQ",
	7:  "VOIP_TEMP",
	8:  "MAIL",
	9:  "OAUTH2_XIAOMI",
	10: "ANDES",
	11: "OEM_AUTH",
	12: "MARKET",
	13: "ALERT",
	14: "PHONE_OEM_OPEN",
	15: "PHONE_GOOGLE",
	16: "PHONE_FACEBOOK",
	17: "PHONE_TWITTER",
	18: "PALLAS",
	19: "PHONE_WEIXIN",
}

var AccountType_value = map[string]int32{
	"TEMP":             0,
	"PHONE":            1,
	"OAUTH2_GOOGLE":    2,
	"OAUTH_TWITTER":    3,
	"OAUTH2_FACEBOOK":  4,
	"OAUTH2_SINAWEIBO": 5,
	"OAUTH2_QQ":        6,
	"VOIP_TEMP":        7,
	"MAIL":             8,
	"OAUTH2_XIAOMI":    9,
	"ANDES":            10,
	"OEM_AUTH":         11,
	"MARKET":           12,
	"ALERT":            13,
	"PHONE_OEM_OPEN":   14,
	"PHONE_GOOGLE":     15,
	"PHONE_FACEBOOK":   16,
	"PHONE_TWITTER":    17,
	"PALLAS":           18,
	"PHONE_WEIXIN":     19,
}

func (x AccountType) String() string {
	return proto.EnumName(AccountType_name, int32(x))
}

func (AccountType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{1}
}

type AccountRegion int32

const (
	AccountRegion_US AccountRegion = 0
	AccountRegion_AP AccountRegion = 1
	AccountRegion_EU AccountRegion = 2
	AccountRegion_CN AccountRegion = 3
)

var AccountRegion_name = map[int32]string{
	0: "US",
	1: "AP",
	2: "EU",
	3: "CN",
}

var AccountRegion_value = map[string]int32{
	"US": 0,
	"AP": 1,
	"EU": 2,
	"CN": 3,
}

func (x AccountRegion) String() string {
	return proto.EnumName(AccountRegion_name, int32(x))
}

func (AccountRegion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{2}
}

type MediaSource int32

const (
	MediaSource_MEDIA_SOURCE_DEFAULT              MediaSource = 0
	MediaSource_MEDIA_SOURCE_FACEBOOK             MediaSource = 1
	MediaSource_MEDIA_SOURCE_ADWORDS              MediaSource = 2
	MediaSource_MEDIA_SOURCE_WANGMENG             MediaSource = 3
	MediaSource_MEDIA_SOURCE_GOOGLE_PLAY          MediaSource = 4
	MediaSource_MEDIA_SOURCE_DAILIANG             MediaSource = 5
	MediaSource_MEDIA_SOURCE_OTHERS               MediaSource = 6
	MediaSource_MEDIA_SOURCE_OEM                  MediaSource = 7
	MediaSource_MEDIA_SOURCE_POSSIBLE_GOOGLE_PLAY MediaSource = 8
	MediaSource_MEDIA_SOURCE_NOAH_PUSH            MediaSource = 9
)

var MediaSource_name = map[int32]string{
	0: "MEDIA_SOURCE_DEFAULT",
	1: "MEDIA_SOURCE_FACEBOOK",
	2: "MEDIA_SOURCE_ADWORDS",
	3: "MEDIA_SOURCE_WANGMENG",
	4: "MEDIA_SOURCE_GOOGLE_PLAY",
	5: "MEDIA_SOURCE_DAILIANG",
	6: "MEDIA_SOURCE_OTHERS",
	7: "MEDIA_SOURCE_OEM",
	8: "MEDIA_SOURCE_POSSIBLE_GOOGLE_PLAY",
	9: "MEDIA_SOURCE_NOAH_PUSH",
}

var MediaSource_value = map[string]int32{
	"MEDIA_SOURCE_DEFAULT":              0,
	"MEDIA_SOURCE_FACEBOOK":             1,
	"MEDIA_SOURCE_ADWORDS":              2,
	"MEDIA_SOURCE_WANGMENG":             3,
	"MEDIA_SOURCE_GOOGLE_PLAY":          4,
	"MEDIA_SOURCE_DAILIANG":             5,
	"MEDIA_SOURCE_OTHERS":               6,
	"MEDIA_SOURCE_OEM":                  7,
	"MEDIA_SOURCE_POSSIBLE_GOOGLE_PLAY": 8,
	"MEDIA_SOURCE_NOAH_PUSH":            9,
}

func (x MediaSource) String() string {
	return proto.EnumName(MediaSource_name, int32(x))
}

func (MediaSource) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{3}
}

type ActivateType int32

const (
	ActivateType_NEW       ActivateType = 0
	ActivateType_RENEW     ActivateType = 1
	ActivateType_UPGRADE   ActivateType = 2
	ActivateType_RECOMMEND ActivateType = 3
	ActivateType_EFFECTIVE ActivateType = 4
)

var ActivateType_name = map[int32]string{
	0: "NEW",
	1: "RENEW",
	2: "UPGRADE",
	3: "RECOMMEND",
	4: "EFFECTIVE",
}

var ActivateType_value = map[string]int32{
	"NEW":       0,
	"RENEW":     1,
	"UPGRADE":   2,
	"RECOMMEND": 3,
	"EFFECTIVE": 4,
}

func (x ActivateType) String() string {
	return proto.EnumName(ActivateType_name, int32(x))
}

func (ActivateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{4}
}

//验token输入：
type TokenIn struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenIn) Reset()         { *m = TokenIn{} }
func (m *TokenIn) String() string { return proto.CompactTextString(m) }
func (*TokenIn) ProtoMessage()    {}
func (*TokenIn) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{0}
}

func (m *TokenIn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenIn.Unmarshal(m, b)
}
func (m *TokenIn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenIn.Marshal(b, m, deterministic)
}
func (m *TokenIn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenIn.Merge(m, src)
}
func (m *TokenIn) XXX_Size() int {
	return xxx_messageInfo_TokenIn.Size(m)
}
func (m *TokenIn) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenIn.DiscardUnknown(m)
}

var xxx_messageInfo_TokenIn proto.InternalMessageInfo

func (m *TokenIn) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TokenIn) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type VerifyResult struct {
	Result               TokenStatus   `protobuf:"varint,1,opt,name=result,proto3,enum=cootek.account.TokenStatus" json:"result,omitempty"`
	UserId               uint64        `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccountType          AccountType   `protobuf:"varint,3,opt,name=account_type,json=accountType,proto3,enum=cootek.account.AccountType" json:"account_type,omitempty"`
	Token                string        `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	ExpDate              uint64        `protobuf:"varint,5,opt,name=exp_date,json=expDate,proto3" json:"exp_date,omitempty"`
	AccountName          string        `protobuf:"bytes,7,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	AccountRegion        AccountRegion `protobuf:"varint,8,opt,name=account_region,json=accountRegion,proto3,enum=cootek.account.AccountRegion" json:"account_region,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *VerifyResult) Reset()         { *m = VerifyResult{} }
func (m *VerifyResult) String() string { return proto.CompactTextString(m) }
func (*VerifyResult) ProtoMessage()    {}
func (*VerifyResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{1}
}

func (m *VerifyResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyResult.Unmarshal(m, b)
}
func (m *VerifyResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyResult.Marshal(b, m, deterministic)
}
func (m *VerifyResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyResult.Merge(m, src)
}
func (m *VerifyResult) XXX_Size() int {
	return xxx_messageInfo_VerifyResult.Size(m)
}
func (m *VerifyResult) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyResult.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyResult proto.InternalMessageInfo

func (m *VerifyResult) GetResult() TokenStatus {
	if m != nil {
		return m.Result
	}
	return TokenStatus_TOKEN_VALID
}

func (m *VerifyResult) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *VerifyResult) GetAccountType() AccountType {
	if m != nil {
		return m.AccountType
	}
	return AccountType_TEMP
}

func (m *VerifyResult) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *VerifyResult) GetExpDate() uint64 {
	if m != nil {
		return m.ExpDate
	}
	return 0
}

func (m *VerifyResult) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *VerifyResult) GetAccountRegion() AccountRegion {
	if m != nil {
		return m.AccountRegion
	}
	return AccountRegion_US
}

//验token输出：
type FullTokenInfo struct {
	Result               TokenStatus     `protobuf:"varint,1,opt,name=result,proto3,enum=cootek.account.TokenStatus" json:"result,omitempty"`
	UserId               uint64          `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccountType          AccountType     `protobuf:"varint,3,opt,name=account_type,json=accountType,proto3,enum=cootek.account.AccountType" json:"account_type,omitempty"`
	Token                string          `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	ExpDate              uint64          `protobuf:"varint,5,opt,name=exp_date,json=expDate,proto3" json:"exp_date,omitempty"`
	ActivationCode       string          `protobuf:"bytes,6,opt,name=activation_code,json=activationCode,proto3" json:"activation_code,omitempty"`
	AccountName          string          `protobuf:"bytes,7,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	AccountRegion        AccountRegion   `protobuf:"varint,8,opt,name=account_region,json=accountRegion,proto3,enum=cootek.account.AccountRegion" json:"account_region,omitempty"`
	MediaSource          MediaSource     `protobuf:"varint,9,opt,name=media_source,json=mediaSource,proto3,enum=cootek.account.MediaSource" json:"media_source,omitempty"`
	AuthInfo_3P          string          `protobuf:"bytes,10,opt,name=auth_info_3p,json=authInfo3p,proto3" json:"auth_info_3p,omitempty"`
	Auth_3PName          string          `protobuf:"bytes,11,opt,name=auth_3p_name,json=auth3pName,proto3" json:"auth_3p_name,omitempty"`
	Secret               string          `protobuf:"bytes,12,opt,name=secret,proto3" json:"secret,omitempty"`
	ActivationInfo       *ActivationInfo `protobuf:"bytes,13,opt,name=activation_info,json=activationInfo,proto3" json:"activation_info,omitempty"`
	IsEzalterParticipant bool            `protobuf:"varint,14,opt,name=is_ezalter_participant,json=isEzalterParticipant,proto3" json:"is_ezalter_participant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FullTokenInfo) Reset()         { *m = FullTokenInfo{} }
func (m *FullTokenInfo) String() string { return proto.CompactTextString(m) }
func (*FullTokenInfo) ProtoMessage()    {}
func (*FullTokenInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{2}
}

func (m *FullTokenInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FullTokenInfo.Unmarshal(m, b)
}
func (m *FullTokenInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FullTokenInfo.Marshal(b, m, deterministic)
}
func (m *FullTokenInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FullTokenInfo.Merge(m, src)
}
func (m *FullTokenInfo) XXX_Size() int {
	return xxx_messageInfo_FullTokenInfo.Size(m)
}
func (m *FullTokenInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FullTokenInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FullTokenInfo proto.InternalMessageInfo

func (m *FullTokenInfo) GetResult() TokenStatus {
	if m != nil {
		return m.Result
	}
	return TokenStatus_TOKEN_VALID
}

func (m *FullTokenInfo) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *FullTokenInfo) GetAccountType() AccountType {
	if m != nil {
		return m.AccountType
	}
	return AccountType_TEMP
}

func (m *FullTokenInfo) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *FullTokenInfo) GetExpDate() uint64 {
	if m != nil {
		return m.ExpDate
	}
	return 0
}

func (m *FullTokenInfo) GetActivationCode() string {
	if m != nil {
		return m.ActivationCode
	}
	return ""
}

func (m *FullTokenInfo) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *FullTokenInfo) GetAccountRegion() AccountRegion {
	if m != nil {
		return m.AccountRegion
	}
	return AccountRegion_US
}

func (m *FullTokenInfo) GetMediaSource() MediaSource {
	if m != nil {
		return m.MediaSource
	}
	return MediaSource_MEDIA_SOURCE_DEFAULT
}

func (m *FullTokenInfo) GetAuthInfo_3P() string {
	if m != nil {
		return m.AuthInfo_3P
	}
	return ""
}

func (m *FullTokenInfo) GetAuth_3PName() string {
	if m != nil {
		return m.Auth_3PName
	}
	return ""
}

func (m *FullTokenInfo) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *FullTokenInfo) GetActivationInfo() *ActivationInfo {
	if m != nil {
		return m.ActivationInfo
	}
	return nil
}

func (m *FullTokenInfo) GetIsEzalterParticipant() bool {
	if m != nil {
		return m.IsEzalterParticipant
	}
	return false
}

type ActivationInfo struct {
	ActivateType         ActivateType `protobuf:"varint,1,opt,name=activate_type,json=activateType,proto3,enum=cootek.account.ActivateType" json:"activate_type,omitempty"`
	UserId               uint64       `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AppName              string       `protobuf:"bytes,3,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	AppVersion           string       `protobuf:"bytes,4,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	OsName               string       `protobuf:"bytes,5,opt,name=os_name,json=osName,proto3" json:"os_name,omitempty"`
	OsVersion            string       `protobuf:"bytes,6,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	DeviceInfo           string       `protobuf:"bytes,7,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	ChannelCode          string       `protobuf:"bytes,8,opt,name=channel_code,json=channelCode,proto3" json:"channel_code,omitempty"`
	Imei                 string       `protobuf:"bytes,9,opt,name=imei,proto3" json:"imei,omitempty"`
	Uuid                 string       `protobuf:"bytes,10,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Simid                string       `protobuf:"bytes,11,opt,name=simid,proto3" json:"simid,omitempty"`
	Locale               string       `protobuf:"bytes,12,opt,name=locale,proto3" json:"locale,omitempty"`
	Mnc                  string       `protobuf:"bytes,13,opt,name=mnc,proto3" json:"mnc,omitempty"`
	Manufacturer         string       `protobuf:"bytes,14,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	ApiLevel             string       `protobuf:"bytes,15,opt,name=api_level,json=apiLevel,proto3" json:"api_level,omitempty"`
	HostAppName          string       `protobuf:"bytes,16,opt,name=host_app_name,json=hostAppName,proto3" json:"host_app_name,omitempty"`
	HostAppVersion       string       `protobuf:"bytes,17,opt,name=host_app_version,json=hostAppVersion,proto3" json:"host_app_version,omitempty"`
	Resolution           string       `protobuf:"bytes,18,opt,name=resolution,proto3" json:"resolution,omitempty"`
	Dpi                  string       `protobuf:"bytes,19,opt,name=dpi,proto3" json:"dpi,omitempty"`
	PysicalSize          string       `protobuf:"bytes,20,opt,name=pysical_size,json=pysicalSize,proto3" json:"pysical_size,omitempty"`
	RecommendChannel     string       `protobuf:"bytes,21,opt,name=recommend_channel,json=recommendChannel,proto3" json:"recommend_channel,omitempty"`
	LastActivationCode   string       `protobuf:"bytes,23,opt,name=last_activation_code,json=lastActivationCode,proto3" json:"last_activation_code,omitempty"`
	Identifier           string       `protobuf:"bytes,24,opt,name=identifier,proto3" json:"identifier,omitempty"`
	SysApp               bool         `protobuf:"varint,25,opt,name=sys_app,json=sysApp,proto3" json:"sys_app,omitempty"`
	Timestamp            uint64       `protobuf:"varint,26,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Idfa                 string       `protobuf:"bytes,27,opt,name=idfa,proto3" json:"idfa,omitempty"`
	Idfv                 string       `protobuf:"bytes,28,opt,name=idfv,proto3" json:"idfv,omitempty"`
	AppleToken           string       `protobuf:"bytes,29,opt,name=apple_token,json=appleToken,proto3" json:"apple_token,omitempty"`
	Release              string       `protobuf:"bytes,30,opt,name=release,proto3" json:"release,omitempty"`
	AndroidId            string       `protobuf:"bytes,31,opt,name=android_id,json=androidId,proto3" json:"android_id,omitempty"`
	MacAddress           string       `protobuf:"bytes,32,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	DeviceVerified       string       `protobuf:"bytes,33,opt,name=device_verified,json=deviceVerified,proto3" json:"device_verified,omitempty"`
	PackageName          string       `protobuf:"bytes,34,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	MetaData             string       `protobuf:"bytes,35,opt,name=meta_data,json=metaData,proto3" json:"meta_data,omitempty"`
	UpgradeTimestamp     uint64       `protobuf:"varint,36,opt,name=upgrade_timestamp,json=upgradeTimestamp,proto3" json:"upgrade_timestamp,omitempty"`
	ActivateTimestamp    uint64       `protobuf:"varint,37,opt,name=activate_timestamp,json=activateTimestamp,proto3" json:"activate_timestamp,omitempty"`
	Gaid                 string       `protobuf:"bytes,38,opt,name=gaid,proto3" json:"gaid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ActivationInfo) Reset()         { *m = ActivationInfo{} }
func (m *ActivationInfo) String() string { return proto.CompactTextString(m) }
func (*ActivationInfo) ProtoMessage()    {}
func (*ActivationInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_84c67560d86c10bb, []int{3}
}

func (m *ActivationInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivationInfo.Unmarshal(m, b)
}
func (m *ActivationInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivationInfo.Marshal(b, m, deterministic)
}
func (m *ActivationInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivationInfo.Merge(m, src)
}
func (m *ActivationInfo) XXX_Size() int {
	return xxx_messageInfo_ActivationInfo.Size(m)
}
func (m *ActivationInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivationInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ActivationInfo proto.InternalMessageInfo

func (m *ActivationInfo) GetActivateType() ActivateType {
	if m != nil {
		return m.ActivateType
	}
	return ActivateType_NEW
}

func (m *ActivationInfo) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ActivationInfo) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *ActivationInfo) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *ActivationInfo) GetOsName() string {
	if m != nil {
		return m.OsName
	}
	return ""
}

func (m *ActivationInfo) GetOsVersion() string {
	if m != nil {
		return m.OsVersion
	}
	return ""
}

func (m *ActivationInfo) GetDeviceInfo() string {
	if m != nil {
		return m.DeviceInfo
	}
	return ""
}

func (m *ActivationInfo) GetChannelCode() string {
	if m != nil {
		return m.ChannelCode
	}
	return ""
}

func (m *ActivationInfo) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *ActivationInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ActivationInfo) GetSimid() string {
	if m != nil {
		return m.Simid
	}
	return ""
}

func (m *ActivationInfo) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *ActivationInfo) GetMnc() string {
	if m != nil {
		return m.Mnc
	}
	return ""
}

func (m *ActivationInfo) GetManufacturer() string {
	if m != nil {
		return m.Manufacturer
	}
	return ""
}

func (m *ActivationInfo) GetApiLevel() string {
	if m != nil {
		return m.ApiLevel
	}
	return ""
}

func (m *ActivationInfo) GetHostAppName() string {
	if m != nil {
		return m.HostAppName
	}
	return ""
}

func (m *ActivationInfo) GetHostAppVersion() string {
	if m != nil {
		return m.HostAppVersion
	}
	return ""
}

func (m *ActivationInfo) GetResolution() string {
	if m != nil {
		return m.Resolution
	}
	return ""
}

func (m *ActivationInfo) GetDpi() string {
	if m != nil {
		return m.Dpi
	}
	return ""
}

func (m *ActivationInfo) GetPysicalSize() string {
	if m != nil {
		return m.PysicalSize
	}
	return ""
}

func (m *ActivationInfo) GetRecommendChannel() string {
	if m != nil {
		return m.RecommendChannel
	}
	return ""
}

func (m *ActivationInfo) GetLastActivationCode() string {
	if m != nil {
		return m.LastActivationCode
	}
	return ""
}

func (m *ActivationInfo) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *ActivationInfo) GetSysApp() bool {
	if m != nil {
		return m.SysApp
	}
	return false
}

func (m *ActivationInfo) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ActivationInfo) GetIdfa() string {
	if m != nil {
		return m.Idfa
	}
	return ""
}

func (m *ActivationInfo) GetIdfv() string {
	if m != nil {
		return m.Idfv
	}
	return ""
}

func (m *ActivationInfo) GetAppleToken() string {
	if m != nil {
		return m.AppleToken
	}
	return ""
}

func (m *ActivationInfo) GetRelease() string {
	if m != nil {
		return m.Release
	}
	return ""
}

func (m *ActivationInfo) GetAndroidId() string {
	if m != nil {
		return m.AndroidId
	}
	return ""
}

func (m *ActivationInfo) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *ActivationInfo) GetDeviceVerified() string {
	if m != nil {
		return m.DeviceVerified
	}
	return ""
}

func (m *ActivationInfo) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

func (m *ActivationInfo) GetMetaData() string {
	if m != nil {
		return m.MetaData
	}
	return ""
}

func (m *ActivationInfo) GetUpgradeTimestamp() uint64 {
	if m != nil {
		return m.UpgradeTimestamp
	}
	return 0
}

func (m *ActivationInfo) GetActivateTimestamp() uint64 {
	if m != nil {
		return m.ActivateTimestamp
	}
	return 0
}

func (m *ActivationInfo) GetGaid() string {
	if m != nil {
		return m.Gaid
	}
	return ""
}

func init() {
	proto.RegisterEnum("cootek.account.TokenStatus", TokenStatus_name, TokenStatus_value)
	proto.RegisterEnum("cootek.account.AccountType", AccountType_name, AccountType_value)
	proto.RegisterEnum("cootek.account.AccountRegion", AccountRegion_name, AccountRegion_value)
	proto.RegisterEnum("cootek.account.MediaSource", MediaSource_name, MediaSource_value)
	proto.RegisterEnum("cootek.account.ActivateType", ActivateType_name, ActivateType_value)
	proto.RegisterType((*TokenIn)(nil), "cootek.account.TokenIn")
	proto.RegisterType((*VerifyResult)(nil), "cootek.account.VerifyResult")
	proto.RegisterType((*FullTokenInfo)(nil), "cootek.account.FullTokenInfo")
	proto.RegisterType((*ActivationInfo)(nil), "cootek.account.ActivationInfo")
}

func init() { proto.RegisterFile("token_service.proto", fileDescriptor_84c67560d86c10bb) }

var fileDescriptor_84c67560d86c10bb = []byte{
	// 1470 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x57, 0x59, 0x53, 0xe4, 0x46,
	0x12, 0xa6, 0x0f, 0xfa, 0xc8, 0x3e, 0x28, 0x0a, 0x66, 0x28, 0x8e, 0xe1, 0xe8, 0xdd, 0xd9, 0x25,
	0xd8, 0x58, 0xd8, 0x05, 0xbf, 0xf8, 0xc5, 0x11, 0x82, 0x16, 0xa0, 0x98, 0xee, 0x56, 0x8f, 0x5a,
	0xc0, 0xd8, 0x2f, 0x8a, 0xb2, 0x54, 0x30, 0x15, 0xa3, 0x2b, 0x24, 0x35, 0x31, 0xcc, 0xbf, 0xf1,
	0xfc, 0x08, 0xff, 0x07, 0xff, 0x26, 0xbf, 0x38, 0xaa, 0x4a, 0x7d, 0x99, 0xe1, 0xd5, 0x11, 0x7e,
	0x6a, 0xe5, 0x97, 0x99, 0x95, 0x95, 0x5f, 0x7d, 0x75, 0x34, 0xac, 0x65, 0xd1, 0x27, 0x16, 0x3a,
	0x29, 0x4b, 0x1e, 0xb9, 0xcb, 0x8e, 0xe3, 0x24, 0xca, 0x22, 0xdc, 0x76, 0xa3, 0x28, 0x63, 0x9f,
	0x8e, 0xa9, 0xeb, 0x46, 0xe3, 0x30, 0xdb, 0x6a, 0x30, 0x9f, 0x65, 0xb9, 0xb3, 0xf3, 0x3d, 0x54,
	0x6d, 0x91, 0x63, 0x84, 0x78, 0x1d, 0x96, 0x65, 0x3a, 0x29, 0xec, 0x17, 0x0e, 0xeb, 0x96, 0x32,
	0x30, 0x81, 0xea, 0x23, 0x4b, 0x52, 0x1e, 0x85, 0xa4, 0x28, 0xf1, 0x89, 0xd9, 0xf9, 0xb5, 0x08,
	0xcd, 0x5b, 0x96, 0xf0, 0xfb, 0x27, 0x8b, 0xa5, 0x63, 0x3f, 0xc3, 0x67, 0x50, 0x49, 0xe4, 0x97,
	0x1c, 0xa1, 0x7d, 0xba, 0x7d, 0xbc, 0x58, 0xf9, 0x58, 0x56, 0x1a, 0x65, 0x34, 0x1b, 0xa7, 0x56,
	0x1e, 0x8a, 0x37, 0xa0, 0x3a, 0x4e, 0x59, 0xe2, 0x70, 0x4f, 0x8e, 0x5f, 0xb6, 0x2a, 0xc2, 0x34,
	0x3c, 0xfc, 0x03, 0x34, 0xf3, 0x3c, 0x27, 0x7b, 0x8a, 0x19, 0x29, 0x7d, 0x7b, 0x4c, 0x4d, 0xfd,
	0xda, 0x4f, 0x31, 0xb3, 0x1a, 0x74, 0x66, 0xcc, 0xda, 0x29, 0xcf, 0xb7, 0xb3, 0x09, 0x35, 0xf6,
	0x39, 0x76, 0x3c, 0x9a, 0x31, 0xb2, 0x2c, 0xeb, 0x55, 0xd9, 0xe7, 0xb8, 0x4b, 0x33, 0x86, 0x0f,
	0x66, 0x05, 0x43, 0x1a, 0x30, 0x52, 0x95, 0x79, 0x93, 0x31, 0x07, 0x34, 0x60, 0xb8, 0x0b, 0xed,
	0x49, 0x48, 0xc2, 0x1e, 0x04, 0x27, 0x35, 0x39, 0xab, 0x37, 0x2f, 0xcc, 0xca, 0x92, 0x41, 0x56,
	0x8b, 0xce, 0x9b, 0x9d, 0xdf, 0xcb, 0xd0, 0xba, 0x1c, 0xfb, 0x7e, 0x4e, 0xfc, 0x7d, 0xf4, 0x77,
	0x67, 0xee, 0xdf, 0xb0, 0x42, 0xdd, 0x8c, 0x3f, 0xd2, 0x8c, 0x47, 0xa1, 0xe3, 0x46, 0x1e, 0x23,
	0x15, 0x99, 0xda, 0x9e, 0xc1, 0x17, 0x91, 0xf7, 0xd7, 0x51, 0x2c, 0x28, 0x08, 0x98, 0xc7, 0xa9,
	0x93, 0x46, 0xe3, 0xc4, 0x65, 0xa4, 0xfe, 0x6d, 0x0a, 0xfa, 0x22, 0x66, 0x24, 0x43, 0xac, 0x46,
	0x30, 0x33, 0xf0, 0x3e, 0x34, 0xe9, 0x38, 0xfb, 0xe8, 0xf0, 0xf0, 0x3e, 0x72, 0xce, 0x62, 0x02,
	0x72, 0xa2, 0x20, 0x30, 0xb1, 0x60, 0x67, 0xf1, 0x34, 0xe2, 0x2c, 0x56, 0xad, 0x34, 0x66, 0x11,
	0x67, 0xb1, 0xec, 0xe4, 0x35, 0x54, 0x52, 0xe6, 0x26, 0x2c, 0x23, 0x4d, 0xe9, 0xcb, 0x2d, 0x7c,
	0xb5, 0xc0, 0x96, 0xa8, 0x40, 0x5a, 0xfb, 0x85, 0xc3, 0xc6, 0xe9, 0xee, 0xf3, 0x16, 0x27, 0x61,
	0xa2, 0xe8, 0x3c, 0x9b, 0x52, 0x35, 0xdf, 0xc1, 0x6b, 0x9e, 0x3a, 0xec, 0x0b, 0xf5, 0x33, 0x96,
	0x38, 0x31, 0x4d, 0x32, 0xee, 0xf2, 0x98, 0x86, 0x19, 0x69, 0xef, 0x17, 0x0e, 0x6b, 0xd6, 0x3a,
	0x4f, 0x75, 0xe5, 0x1c, 0xce, 0x7c, 0x9d, 0xaf, 0x75, 0x68, 0x2f, 0x0e, 0x8c, 0x35, 0x68, 0xe5,
	0x43, 0x33, 0xa5, 0x18, 0xa5, 0xc2, 0x9d, 0x17, 0xe6, 0xc3, 0xa4, 0x64, 0x9a, 0x74, 0xce, 0x7a,
	0x59, 0x8c, 0x9b, 0x50, 0xa3, 0x71, 0xce, 0x51, 0x49, 0x1d, 0x20, 0x34, 0x56, 0x04, 0xed, 0x41,
	0x43, 0xb8, 0x26, 0xc7, 0x4b, 0x39, 0x67, 0x30, 0x8e, 0x6f, 0x15, 0x22, 0x06, 0x8d, 0x52, 0x95,
	0xba, 0xac, 0x28, 0x8c, 0x52, 0x99, 0xf9, 0x06, 0x20, 0x4a, 0xa7, 0x89, 0x4a, 0x6b, 0xf5, 0x28,
	0x9d, 0xe4, 0xed, 0x41, 0xc3, 0x63, 0xe2, 0x04, 0x54, 0xec, 0x2a, 0x95, 0x81, 0x82, 0x64, 0xc3,
	0x07, 0xd0, 0x74, 0x3f, 0xd2, 0x30, 0x64, 0xbe, 0x52, 0x6b, 0x4d, 0xe9, 0x30, 0xc7, 0xa4, 0x54,
	0x31, 0x94, 0x79, 0xc0, 0xb8, 0x54, 0x4e, 0xdd, 0x92, 0xdf, 0x02, 0x1b, 0x8f, 0xb9, 0x97, 0xab,
	0x41, 0x7e, 0x8b, 0xcd, 0x92, 0xf2, 0x80, 0x7b, 0xb9, 0x00, 0x94, 0x21, 0xd6, 0xde, 0x8f, 0x5c,
	0xea, 0xb3, 0xc9, 0xda, 0x2b, 0x0b, 0x23, 0x28, 0x05, 0xa1, 0x2b, 0xd7, 0xbb, 0x6e, 0x89, 0x4f,
	0xdc, 0x81, 0x66, 0x40, 0xc3, 0xf1, 0x3d, 0x75, 0xb3, 0x71, 0xc2, 0x12, 0xb9, 0x74, 0x75, 0x6b,
	0x01, 0xc3, 0xdb, 0x50, 0xa7, 0x31, 0x77, 0x7c, 0xf6, 0xc8, 0x7c, 0xb2, 0x22, 0x03, 0x6a, 0x34,
	0xe6, 0x3d, 0x61, 0xe3, 0x0e, 0xb4, 0x3e, 0x46, 0x69, 0xe6, 0x4c, 0x59, 0x46, 0xaa, 0x19, 0x01,
	0x6a, 0x39, 0xd3, 0x87, 0x80, 0xa6, 0x31, 0x13, 0xd6, 0x56, 0xd5, 0x0e, 0xcd, 0xc3, 0x26, 0xd4,
	0xed, 0x02, 0x24, 0x2c, 0x8d, 0xfc, 0xb1, 0x10, 0x07, 0xc1, 0x8a, 0xb9, 0x19, 0x22, 0x1a, 0xf0,
	0x62, 0x4e, 0xd6, 0x54, 0x03, 0x5e, 0xcc, 0x05, 0x97, 0xf1, 0x53, 0xca, 0x5d, 0xea, 0x3b, 0x29,
	0xff, 0xc2, 0xc8, 0xba, 0x2a, 0x9f, 0x63, 0x23, 0xfe, 0x85, 0xe1, 0xff, 0xc0, 0x6a, 0xc2, 0xdc,
	0x28, 0x08, 0x58, 0xe8, 0x39, 0x39, 0xc9, 0xe4, 0x95, 0x8c, 0x43, 0x53, 0xc7, 0x85, 0xc2, 0xf1,
	0xff, 0x60, 0xdd, 0xa7, 0x62, 0xae, 0x7f, 0x3a, 0x51, 0x36, 0x64, 0x3c, 0x16, 0x3e, 0x6d, 0xf1,
	0x54, 0xd9, 0x05, 0xe0, 0x1e, 0x0b, 0x33, 0x7e, 0xcf, 0x59, 0x42, 0x88, 0x9a, 0xf3, 0x0c, 0x11,
	0x32, 0x4a, 0x9f, 0x52, 0xd1, 0x3c, 0xd9, 0x94, 0x1b, 0xa3, 0x92, 0x3e, 0xa5, 0x5a, 0x1c, 0xe3,
	0x1d, 0xa8, 0x67, 0x3c, 0x60, 0x69, 0x46, 0x83, 0x98, 0x6c, 0x49, 0xd9, 0xce, 0x00, 0xa9, 0x00,
	0xef, 0x9e, 0x92, 0xed, 0x5c, 0x01, 0xde, 0x3d, 0xcd, 0xb1, 0x47, 0xb2, 0x33, 0xc5, 0x1e, 0x73,
	0x19, 0xfb, 0xcc, 0x51, 0x87, 0xe6, 0x9b, 0xa9, 0x8c, 0x7d, 0x66, 0x4f, 0xae, 0xd0, 0x84, 0xf9,
	0x8c, 0xa6, 0x8c, 0xec, 0xaa, 0x1d, 0x90, 0x9b, 0x42, 0xc7, 0x34, 0xf4, 0x92, 0x88, 0x7b, 0x62,
	0xe3, 0xec, 0x29, 0x1d, 0xe7, 0x88, 0xe1, 0x89, 0x91, 0x03, 0xea, 0x3a, 0xd4, 0xf3, 0x12, 0x96,
	0xa6, 0x64, 0x5f, 0x8d, 0x1c, 0x50, 0x57, 0x53, 0x88, 0x38, 0x78, 0x73, 0xa1, 0x3f, 0x8a, 0x8b,
	0x98, 0x33, 0x8f, 0x1c, 0xa8, 0x65, 0x55, 0xf0, 0x6d, 0x8e, 0xca, 0x45, 0xa2, 0xee, 0x27, 0xfa,
	0xc0, 0x94, 0x46, 0x3a, 0xf9, 0x22, 0x29, 0x4c, 0x6a, 0x64, 0x1b, 0xea, 0x01, 0xcb, 0xa8, 0x38,
	0xe0, 0x29, 0xf9, 0x87, 0x12, 0x99, 0x00, 0xba, 0x34, 0xa3, 0x62, 0x05, 0xc7, 0xf1, 0x43, 0x42,
	0x3d, 0xe6, 0xcc, 0x18, 0xfb, 0xa7, 0x64, 0x0c, 0xe5, 0x0e, 0x7b, 0x4a, 0xdc, 0x7f, 0x01, 0xcf,
	0x8e, 0x93, 0x69, 0xf4, 0x5b, 0x19, 0xbd, 0x3a, 0x3d, 0x35, 0xe6, 0x79, 0x7e, 0xa0, 0xdc, 0x23,
	0xff, 0x52, 0x9c, 0x8a, 0xef, 0xa3, 0xff, 0x43, 0x63, 0xee, 0xca, 0xc3, 0x2b, 0xd0, 0xb0, 0xcd,
	0x77, 0xfa, 0xc0, 0xb9, 0xd5, 0x7a, 0x46, 0x17, 0x2d, 0xe1, 0x55, 0x68, 0x29, 0xc0, 0x18, 0x28,
	0xa8, 0x78, 0xf4, 0x5b, 0x11, 0x1a, 0x73, 0x57, 0x1a, 0xae, 0x41, 0xd9, 0xd6, 0xfb, 0x43, 0xb4,
	0x84, 0xeb, 0xb0, 0x3c, 0xbc, 0x36, 0x07, 0x3a, 0x2a, 0x88, 0x3c, 0x53, 0xbb, 0xb1, 0xaf, 0x4f,
	0x9d, 0x2b, 0xd3, 0xbc, 0xea, 0xe9, 0xa8, 0x38, 0x85, 0x1c, 0xfb, 0xce, 0xb0, 0x6d, 0xdd, 0x42,
	0x25, 0xbc, 0x06, 0x2b, 0x79, 0xd4, 0xa5, 0x76, 0xa1, 0x9f, 0x9b, 0xe6, 0x3b, 0x54, 0xc6, 0xeb,
	0x80, 0x72, 0x70, 0x64, 0x0c, 0xb4, 0x3b, 0xdd, 0x38, 0x37, 0xd1, 0x32, 0x6e, 0x41, 0x3d, 0x47,
	0xdf, 0xbf, 0x47, 0x15, 0x61, 0xde, 0x9a, 0xc6, 0xd0, 0x91, 0x95, 0xab, 0x62, 0x0e, 0x7d, 0xcd,
	0xe8, 0xa1, 0xda, 0x5c, 0xe1, 0x0f, 0x86, 0x66, 0xf6, 0x0d, 0x54, 0x17, 0xd3, 0xd2, 0x06, 0x5d,
	0x7d, 0x84, 0x00, 0x37, 0xa1, 0x66, 0xea, 0x7d, 0x47, 0x04, 0xa0, 0x06, 0x06, 0xa8, 0xf4, 0x35,
	0xeb, 0x9d, 0x6e, 0xa3, 0xa6, 0x0c, 0xea, 0xe9, 0x96, 0x8d, 0x5a, 0x18, 0x43, 0x5b, 0xb6, 0xe1,
	0x88, 0x50, 0x73, 0xa8, 0x0f, 0x50, 0x1b, 0x23, 0x68, 0x2a, 0x2c, 0x6f, 0x67, 0x65, 0x16, 0x35,
	0x9d, 0x3a, 0x12, 0xc5, 0x15, 0x36, 0x69, 0x71, 0x55, 0xd4, 0x18, 0x6a, 0xbd, 0x9e, 0x36, 0x42,
	0x78, 0x36, 0xc8, 0x9d, 0x6e, 0x7c, 0x30, 0x06, 0x68, 0xed, 0xe8, 0x04, 0x5a, 0x0b, 0xd7, 0x2b,
	0xae, 0x40, 0xf1, 0x66, 0x84, 0x96, 0xc4, 0xaf, 0x36, 0x44, 0x05, 0xf1, 0xab, 0xdf, 0xa0, 0xa2,
	0xf8, 0xbd, 0x18, 0xa0, 0xd2, 0xd1, 0xd7, 0x22, 0x34, 0xe6, 0x2e, 0x53, 0x4c, 0x60, 0xbd, 0xaf,
	0x77, 0x0d, 0xcd, 0x19, 0x99, 0x37, 0xd6, 0x85, 0xee, 0x74, 0xf5, 0x4b, 0xed, 0xa6, 0x67, 0xa3,
	0x25, 0xbc, 0x09, 0xaf, 0x16, 0x3c, 0xd3, 0x69, 0x16, 0x9e, 0x25, 0x69, 0xdd, 0x3b, 0xd3, 0xea,
	0x8e, 0x50, 0xf1, 0x59, 0xd2, 0x9d, 0x36, 0xb8, 0xea, 0xeb, 0x83, 0x2b, 0x54, 0xc2, 0x3b, 0x40,
	0x16, 0x5c, 0x8a, 0x08, 0x67, 0xd8, 0xd3, 0x7e, 0x44, 0xe5, 0x67, 0x89, 0x5d, 0xcd, 0xe8, 0x19,
	0xda, 0xe0, 0x0a, 0x2d, 0xe3, 0x0d, 0x58, 0x5b, 0x70, 0x99, 0xf6, 0xb5, 0x6e, 0x8d, 0x50, 0x45,
	0x2c, 0xf4, 0xa2, 0x43, 0xef, 0xa3, 0x2a, 0x7e, 0x0b, 0x07, 0x0b, 0xe8, 0xd0, 0x1c, 0x8d, 0x8c,
	0xf3, 0xde, 0x62, 0xc1, 0x1a, 0xde, 0x82, 0xd7, 0x0b, 0x61, 0x03, 0x53, 0xbb, 0x76, 0x86, 0x37,
	0xa3, 0x6b, 0x54, 0x3f, 0xea, 0x43, 0x73, 0xfe, 0x06, 0xc5, 0x55, 0x28, 0x0d, 0xf4, 0x3b, 0x25,
	0x50, 0x4b, 0x17, 0x9f, 0x05, 0xdc, 0x80, 0xea, 0xcd, 0xf0, 0xca, 0xd2, 0xba, 0x42, 0x9a, 0x2d,
	0xa8, 0x5b, 0xfa, 0x85, 0xd9, 0xef, 0xeb, 0x83, 0x2e, 0x2a, 0x09, 0x53, 0xbf, 0xbc, 0xd4, 0x2f,
	0x6c, 0xe3, 0x56, 0x47, 0xe5, 0xd3, 0x5f, 0x0a, 0xd0, 0x54, 0x9b, 0x44, 0x3d, 0xf7, 0xf1, 0x25,
	0x34, 0xd4, 0x7b, 0x5c, 0x1d, 0x3b, 0x1b, 0xdf, 0x7c, 0x44, 0x1a, 0xe1, 0xd6, 0xb3, 0x7b, 0x7d,
	0xfe, 0x15, 0xdf, 0x59, 0xc2, 0x06, 0xb4, 0xde, 0x8f, 0x59, 0xf2, 0x24, 0xde, 0xa8, 0xf2, 0xba,
	0x7c, 0x71, 0xa4, 0x67, 0x8f, 0xb2, 0x85, 0x67, 0x6d, 0x67, 0xe9, 0xfc, 0xe0, 0xa7, 0xbd, 0x80,
	0x3f, 0x9c, 0xa8, 0xa8, 0x93, 0x3c, 0xea, 0x64, 0x7e, 0xd6, 0x3f, 0x57, 0xe4, 0x1f, 0x91, 0xb3,
	0x3f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x12, 0xf4, 0xe9, 0xbb, 0xbc, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TokenServiceClient is the client API for TokenService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TokenServiceClient interface {
	VerifyToken(ctx context.Context, in *TokenIn, opts ...grpc.CallOption) (*VerifyResult, error)
	QueryFullInfo(ctx context.Context, in *TokenIn, opts ...grpc.CallOption) (*FullTokenInfo, error)
}

type tokenServiceClient struct {
	cc *grpc.ClientConn
}

func NewTokenServiceClient(cc *grpc.ClientConn) TokenServiceClient {
	return &tokenServiceClient{cc}
}

func (c *tokenServiceClient) VerifyToken(ctx context.Context, in *TokenIn, opts ...grpc.CallOption) (*VerifyResult, error) {
	out := new(VerifyResult)
	err := c.cc.Invoke(ctx, "/cootek.account.TokenService/VerifyToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenServiceClient) QueryFullInfo(ctx context.Context, in *TokenIn, opts ...grpc.CallOption) (*FullTokenInfo, error) {
	out := new(FullTokenInfo)
	err := c.cc.Invoke(ctx, "/cootek.account.TokenService/QueryFullInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TokenServiceServer is the server API for TokenService service.
type TokenServiceServer interface {
	VerifyToken(context.Context, *TokenIn) (*VerifyResult, error)
	QueryFullInfo(context.Context, *TokenIn) (*FullTokenInfo, error)
}

// UnimplementedTokenServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTokenServiceServer struct {
}

func (*UnimplementedTokenServiceServer) VerifyToken(ctx context.Context, req *TokenIn) (*VerifyResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyToken not implemented")
}
func (*UnimplementedTokenServiceServer) QueryFullInfo(ctx context.Context, req *TokenIn) (*FullTokenInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryFullInfo not implemented")
}

func RegisterTokenServiceServer(s *grpc.Server, srv TokenServiceServer) {
	s.RegisterService(&_TokenService_serviceDesc, srv)
}

func _TokenService_VerifyToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServiceServer).VerifyToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cootek.account.TokenService/VerifyToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServiceServer).VerifyToken(ctx, req.(*TokenIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _TokenService_QueryFullInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenServiceServer).QueryFullInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cootek.account.TokenService/QueryFullInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenServiceServer).QueryFullInfo(ctx, req.(*TokenIn))
	}
	return interceptor(ctx, in, info, handler)
}

var _TokenService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cootek.account.TokenService",
	HandlerType: (*TokenServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VerifyToken",
			Handler:    _TokenService_VerifyToken_Handler,
		},
		{
			MethodName: "QueryFullInfo",
			Handler:    _TokenService_QueryFullInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "token_service.proto",
}
